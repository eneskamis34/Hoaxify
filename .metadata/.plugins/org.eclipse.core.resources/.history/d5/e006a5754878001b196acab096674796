package com.hoaxify.ws.user;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.hoaxify.ws.error.ApiError;
import com.hoaxify.ws.shared.GenericResponse;

import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@RestController                // rest işlemlerini yapacağımız için Springe tanımlıyoruz.
public class UserController {
	
	
	@Autowired
	UserService userService;
	
	@PostMapping("/api/1.0/users")
	public ResponseEntity<?> createUser(@Valid @RequestBody User user) {
		
		ApiError error = new ApiError(400,"validation error","/api/users/1.0");
		Map<String, String> validationErrors = new HashMap<>();
		
		String username = user.getUsername();
		String displayName = user.getDisplayName();

		if(username == null || username.isEmpty())
		{
			validationErrors.put("username","Username cannot be empty or null");
		}
		if(displayName == null || displayName.isEmpty())
		{
			validationErrors.put("displayName","Display Name cannot be empty or null");
		}
		if(validationErrors.size()>0)
		{
			error.setValidationErrors(validationErrors);
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(error);
		}
		userService.save(user);	
		return ResponseEntity.ok(new GenericResponse("create user."));
	}

}
